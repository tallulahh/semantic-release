name: Release
on:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Update Documentation
        run: |
          pip3 install ruamel.yaml
          python3 ./scripts/generate_action_docs.py
          python3 ./scripts/generate_workflow_docs.py
          python3 ./scripts/update_readme.py

      - name: GPG GIT config
        run: |
          echo "${{ secrets.GPG_KEY }}" | base64 -d > ./bot-key.asc
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | base64 -d > ./bot-private-key.asc
          gpg2 --import --batch ./*.asc
          rm -rf ./bot-key.asc
          rm -rf ./bot-private-key.asc
          
      - name: Git config
        run: |
          git config --global user.name "tallulahh"
          git config --global user.email "tallulah.carlisle@gmail.com"
          git config --global commit.gpgsign true
          git config --global tag.gpgsign true
          git config --global user.signingkey ${{ secrets.GPG_SIGNING_KEY }}
          git config --global push.gpgsign true
          git status
          chmod +x ./sign.sh

      - name: Set Version
        id: set_version
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          GITHUB_OWNER: "tallulahh"
          GIT_USERNAME: "tallulahh"
          GIT_AUTHOR_NAME: "tallulahh"
          GIT_COMMITTER_NAME: "tallulahh"
          GIT_EMAIL: "tallulah.carlisle@gmail.com"
          GIT_AUTHOR_EMAIL: "tallulah.carlisle@gmail.com"
          GIT_COMMITTER_EMAIL: "tallulah.carlisle@gmail.com"
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        run: |
          git config --list
          npm install -g semantic-release@24.2.5 \
            @semantic-release/git@10.0.1 \
            @semantic-release/exec@7.1.0 \
            @semantic-release/changelog@6.0.3
          npm install -g conventional-changelog@7.1.0 \
            conventional-changelog-conventionalcommits@9.0.0 \
            conventional-changelog-cli@5.0.0
          npx semantic-release
          echo "nextReleaseVersion=$(cat build.env | cut -f2 -d"=")" >> $GITHUB_OUTPUT
          cat build.env
